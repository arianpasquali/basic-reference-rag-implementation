[project]
name = "basic-reference-rag-implementation"
version = "0.1.0"
description = "AI agent service built with LangGraph, FastAPI and Chainlit"
readme = "README.md"
authors = [{ name = "Arian Pasquali", email = "arianpasquali@gmail.com" }]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Framework :: FastAPI",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

requires-python = ">=3.11"

dependencies = [
    "docx2txt ~=0.8",
    "duckduckgo-search>=7.3.0",
    "fastapi ~=0.115.5",
    "grpcio >=1.68.0",
    "httpx ~=0.27.2",
    "jiter ~=0.8.2",
    "langchain-core ~=0.3.33",
    "langchain-community~=0.3.16",
    "langchain-anthropic ~= 0.3.0",
    "langchain-aws ~=0.2.14",
    "langchain-chroma ~=0.2.3",
    "langchain-google-genai ~=2.0.11",
    "langchain-google-vertexai>=2.0.7",
    "langchain-groq ~=0.2.1",
    "langchain-ollama ~=0.2.3",
    "langchain-openai ~=0.3.0",
    "langfuse ~=2.60.5",
    "langgraph ~=0.6.6",
    "langgraph-checkpoint-mongodb ~=0.1.3",
    "langgraph-checkpoint-postgres ~=2.0.13",
    "langgraph-checkpoint-sqlite ~=2.0.1",
    "langgraph-supervisor ~=0.0.27",
    "langsmith ~=0.4.0",
    "numexpr ~=2.10.1",
    "numpy ~=1.26.4; python_version <= '3.12'",
    "numpy ~=2.2.3; python_version >= '3.13'",
    "onnxruntime ~= 1.21.1",
    "pandas ~=2.2.3",
    "psycopg[binary,pool] ~=3.2.4",
    "pyarrow >=18.1.0",
    "pydantic ~=2.10.1",
    "pydantic-settings ~=2.6.1",
    "pypdf ~=5.3.0",
    "pyowm ~=3.3.0",
    "python-dotenv ~=1.0.1",
    "setuptools ~=75.6.0",
    "streamlit ~=1.46.0",
    "tiktoken >=0.8.0",
    "uvicorn ~=0.32.1",
    "chainlit>=2.6.3",
    "lancedb>=0.25.0",
    "langchain-text-splitters ~=0.3.0",
    "chromadb>=1.1.0",
    "beautifulsoup4>=4.13.5",
    "html2text>=2025.4.15",
    "lxml>=6.0.1",
]

[dependency-groups]
dev = [
    "langgraph-cli[inmem]",
    "pre-commit",
    "pytest",
    "pytest-cov",
    "pytest-env",
    "pytest-asyncio",
    "ruff",
    "mypy",
]

eval = [
    # Alternative evaluation libraries without gRPC conflicts
    "ragas ~=0.1.0",  # Alternative to DeepEval for RAG evaluation
    "pytest-benchmark",
    "tabulate",
    "matplotlib",
    "seaborn",
    "pandas",
    "numpy",
    # Optional: DeepEval with relaxed constraints (may work with newer versions)
    # "deepeval; python_version >= '3.10'",
]

client = [
    "httpx~=0.27.2",
    "pydantic ~=2.10.1",
    "python-dotenv ~=1.0.1",
    "streamlit~=1.46.0",
]

[tool.ruff]
line-length = 100
target-version = "py39"  # Changed to match Python 3.9 compatibility
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
    ".pytest_cache",
    ".mypy_cache",
    ".ruff_cache",
    "docs/",
    "lancedb/",
    "scripts/__pycache__/",
]

[tool.ruff.lint]
# Enable core rule sets for practical development
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
]

ignore = [
    "E501",   # Line too long (let ruff format handle this)
    "W293",   # Blank line contains whitespace
    "W291",   # Trailing whitespace
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "lancedb",
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["S101", "S106", "S108"]  # Allow assert, hardcoded passwords in tests
"scripts/**/*.py" = ["S101", "S603", "S607"]  # Allow scripts to be more permissive

[tool.ruff.lint.isort]
known-first-party = ["assistant", "shared"]
force-sort-within-sections = true

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

# Security settings for bandit integration
[tool.bandit]
exclude_dirs = ["tests", "scripts/test_*"]
skips = ["B101", "B601"]

[tool.pytest.ini_options]
pythonpath = ["src"]
asyncio_default_fixture_loop_scope = "function"

[tool.pytest_env]
OPENAI_API_KEY = "sk-fake-openai-key"

[tool.mypy]
plugins = "pydantic.mypy"
exclude = "src/streamlit_app.py"

[[tool.mypy.overrides]]
module = ["numexpr.*"]
follow_untyped_imports = true
